import tensorflow as tf
from tensorflow.keras import datasets, layers, models

handwritten_mnist = tf.keras.datasets.mnist

(train_images, train_labels), (test_images, test_labels) = handwritten_mnist.load_data()

train_images = train_images.reshape(60000, 28, 28, 1)
train_images = train_images / 255.0
test_images = test_images.reshape(10000, 28, 28, 1)
test_images=test_images/255.0


model = models.Sequential([

    layers.Conv2D(32, 3, activation=$a, input_shape=(28, 28, 1)),
    layers.MaxPooling2D(2, strides=2),
    layers.Conv2D(64, (3, 3), activation=$a),
    layers.MaxPooling2D((2, 2)),
    layers.Conv2D(64, (3, 3), activation=$a),
    layers.Flatten(),
    layers.Dense(64, activation=$a),
    layers.Dense(10)

])

model.compile(optimizer='adam',
              loss=tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True),
              metrics=['accuracy'])

model.fit(train_images, train_labels, epochs=$e,
          validation_data=(test_images, test_labels))

test_loss, accuracy = model.evaluate(test_images,  test_labels, verbose=2)

print('\nTest accuracy:', accuracy)